# Log format
log_format      mtimercms  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
log_format      mblog  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

# Redirect to anydomain
# Change to your own domain
#server {
#    listen 80 default_server;
#    server_name  _;
#    return 301 $scheme://www.mtimer.cn$request_uri;
#}
# Force http
#server {
#    listen 443 ssl;
#    server_name mtimer.cn;
#    ssl on;
#    ssl_certificate     mtimer.cn.crt;
#    ssl_certificate_key mtimer.cn.key;
#    ssl_ciphers RC4:HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers on;
#    return 301 http://www.mtimer.cn$request_uri;
#}
# Force subdomain http
#server {
#    listen 443 ssl;
#    server_name ~^(?<sub>[a-zA-Z0-9-_]+)\.mtimer\.cn$;
#    ssl on;
#    ssl_certificate     mtimer.cn.crt;
#    ssl_certificate_key mtimer.cn.key;
#    ssl_ciphers RC4:HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers on;
#    return 301 http://${sub}.mtimer.cn$request_uri;
#}
# Define Top domain
server {
    listen  80;
    server_name  www.mtimer.cn;
    index index.html index.htm index.php;
    root /mtimer/www/mtimercms;

    access_log  /mtimer/log/nginx/mtimer_cms_access.log mtimercms;
    error_log  /mtimer/log/nginx/mtimer_cms_error.log;
 
    location ~ /\.ht {
        deny  all;
    }

    location ~ .*\.(php|php5)?$
    {
        #fastcgi_pass  unix:/tmp/php-cgi.sock;
        fastcgi_pass  127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi.conf;
    }

    location ~ .*\.(gif|jpg|jpeg|png|ico|bmp|swf|css|js)$
    {
        expires 30d;
        add_header Cache-Control public;
    }

    # Extra login
    # At /mtimer/server/nginx/conf/vhosts run
    # printf "LOGIN:$(openssl passwd -crypt PASSWORD)\n" >> .htpasswd
    #location =/xxx.php {
    #   auth_basic "closed section";
    #   auth_basic_user_file vhosts/.htpasswd;
    #   fastcgi_pass 127.0.0.1:9000;
    #   fastcgi_index index.php;
    #   include fastcgi.conf;
    #}

    # only allow these request methods
    if ($request_method !~ ^(GET|HEAD|POST)$ ){ return 405; }
        
    # Rewrite rules
    include /mtimer/server/nginx/conf/rewrite/mtimercms.conf;
}
# Define subdomains
server {
        listen       80;
        server_name  ~^(?<sub>[a-zA-Z0-9-_]+)\.mtimer\.cn$;
        index index.html index.htm index.php;
        root /mtimer/www/mtimercms;

        access_log  /mtimer/log/nginx/mblog_access.log mblog;
        error_log  /mtimer/log/nginx/mblog_error.log;
 
        location ~ /\.ht {
            deny  all;
        }

        location ~ .*\.(php|php5)?$
        {
                #fastcgi_pass  unix:/tmp/php-cgi.sock;
                fastcgi_pass  127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi.conf;
        }

        location ~ .*\.(gif|jpg|jpeg|png|ico|bmp|swf|css|js)$
        {
                expires 30d;
                add_header          Cache-Control public;
        }

        # Extra login
        # At /mtimer/server/nginx/conf/vhosts run
        # printf "LOGIN:$(openssl passwd -crypt PASSWORD)\n" >> .htpasswd
        #location =/xxx.php {
        #        auth_basic            "closed section";
        #        auth_basic_user_file  vhosts/.htpasswd;
        #        fastcgi_pass  127.0.0.1:9000;
        #        fastcgi_index index.php;
        #        include fastcgi.conf;
        #}
        
        # only allow these request methods
        if ($request_method !~ ^(GET|HEAD|POST)$ ){ return 405; }

        # Rewrite rules
        include /mtimer/server/nginx/conf/rewrite/mblog.conf;
        include /mtimer/server/nginx/conf/rewrite/mtimercms.conf;
}